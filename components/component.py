# This file defines an abstract component class that serves as a parent to physical system components.
# In general a component will:
#       - Have an input connection node to accept data
#       - Have an output connection node to post data
#       - Save its data

from abc import  ABC, abstractmethod

class Component(ABC):
    '''
    Abstract class that serves as a parent to system electrical components including photovoltaics, inverters, and batteries.
    '''
    @abstractmethod
    def __init__(self,name,size):
        self.name = name
        self.size = size

    @abstractmethod
    def _calc_energy_output(self):
        '''
        Calculate the component's output energy.
        '''
        pass

    @abstractmethod
    def _save_data(self):
        '''
        Save data generated by component in this timestep.
        '''